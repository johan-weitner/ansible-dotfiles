---
  - name: Install VS Code, Alacritty, zsh, oh-my-zsh, Git, and MacOS plugins
    hosts: localhost
    become: yes
    gather_facts: yes

    vars:
      github_access_token: !vault |
            $ANSIBLE_VAULT;1.1;AES256
            64393136353863396664353163396661
            34353634353134353634353134353631
            61643834353134353634353134353631
            61643834353134353634353134353631
            61643834353134353634353134353631
            61643834353134353634353134353631


    # Install dependencies with Homebrew if MacOS
    tasks:
    - name: Check if Homebrew is installed
      command: which brew
      register: brew_check
      ignore_errors: yes

    - name: Install Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        executable: /bin/bash
      when: brew_check.rc != 0

    - name: Ensure Homebrew is up to date
      command: brew update
      when: brew_check.rc == 0
      become: false

    - name: Install dependencies with Homebrew
      homebrew:
        name:
          - build-essential
          - curl
          - git
        state: present
      when: ansible_facts['os_family'] == 'Darwin'
      become: false

    # Else install dependencies with apt
    - name: Install dependencies
      apt:
        name:
          - build-essential
          - curl
          - file
          - git
          - snap
          # - python
        state: present
      when: ansible_facts['os_family'] != 'Darwin'

    - name: Ensure snapd service is started and enabled
      service:
        name: snapd
        state: started
        enabled: yes
      when: snap_check.rc != 0
      ignore_errors: yes

    - name: Install Homebrew on macOS
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      args:
        executable: /bin/bash
      when: ansible_facts['os_family'] == 'Darwin'
      ignore_errors: yes

    # - name: Install Homebrew on x86_64 Linux
    #   shell: /usr/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    #   args:
    #     executable: /bin/bash
    #   environment:
    #     NONINTERACTIVE: "1"
    #   when: ansible_facts['os_family'] != 'Darwin' and ansible_facts['architecture'] == 'x86_64'
    #   ignore_errors: yes

    - name: Add Homebrew to PATH on macOS and Linux
      shell: echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ~/.profile
      args:
        executable: /bin/bash
      when: ansible_facts['os_family'] == 'Darwin' or ansible_facts['architecture'] == 'x86_64'
      ignore_errors: yes

    - name: Source Homebrew
      shell: /bin/bash -c 'source ~/.profile'
      args:
        executable: /bin/bash
      when: ansible_facts['os_family'] == 'Darwin' or ansible_facts['architecture'] == 'x86_64'
      ignore_errors: yes

    - name: Install Alacritty
      package:
        name: librust-alacritty-terminal-dev
        state: present

    - name: Install zsh
      package:
        name: zsh
        state: present

    - name: Install oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: ~/.oh-my-zsh
        clone: yes
        update: yes

    - name: Install MacOS plugins
      block:
        - name: Install MacOS plugins
          package:
            name: "{{ item }}"
            state: present
          loop:
            - git
            - zsh
      when: ansible_facts['os_family'] == 'Darwin'

    - name: Set zsh as default shell
      user:
        name: "{{ ansible_user }}"
        shell: /bin/zsh

    - name: Configure oh-my-zsh
      block:
        - name: Create .zshrc file
          file:
            path: ~/.zshrc
            state: touch
        - name: Add oh-my-zsh configuration to .zshrc
          lineinfile:
            dest: ~/.zshrc
            line: "source ~/.oh-my-zsh/oh-my-zsh.sh"
            create: yes
        TEST_VAR: "OK"

    # To establish env vars, write export statements to .zshrc
    # - name: Set Github access token environment variable
    #   environment:
    #     GITHUB_ACCESS_TOKEN: "{{ github_access_token }}"

    roles:
      - thejaxon.vscode
      - 1password
